function [f, df] = objective(U, auxdata)  
    [time_v, v] = system_solve(U, auxdata);
    f = -trapz(time_v, v);
    
    % Gradient
    lambda0 = 0;
    v = griddedInterpolant(time_v, v, "linear");
    Lambda = ode5(@(t,lambda) -1 + lambda *(auxdata.k1 - 2*auxdata.k2*v(t)), flip(time_v), lambda0);    
    Lambda = flip(Lambda);
%     Lambda = griddedInterpolant(time_v, Lambda, "linear");
%     df = arrayfun(@(a,b) integral(@(t) -Lambda(t), a, b), auxdata.tau(1:end-1), auxdata.tau(2:end));  
%     df = [df, df(end)];
%     Lambda = griddedInterpolant(time_XV, flip(Lambda), "cubic");
    df = -Lambda * 0.1; 

%     figure(3);
%     plot(df);
%     drawnow;
%     pause(5);
end